{"uuid":"87f8b9a4-1858-4fbb-b1d7-dd4992b12088","historyId":"9926285320a000b7f071557182a316cc","fullName":"io.cucumber.testng.AbstractTestNGCucumberTests.runScenario","labels":[{"name":"package","value":"week4.day2.runners.IncidentTestRunner"},{"name":"testClass","value":"week4.day2.runners.IncidentTestRunner"},{"name":"testMethod","value":"runScenario"},{"name":"parentSuite","value":"Default suite"},{"name":"suite","value":"Default test"},{"name":"subSuite","value":"week4.day2.runners.IncidentTestRunner"},{"name":"host","value":"EPHUBUDW00DE"},{"name":"thread","value":"6992@EPHUBUDW00DE.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"Runs Cucumber Scenarios","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"The step 'set the base path of the service now incident table' and 3 other step(s) are undefined.\nYou can implement these steps using the snippet(s) below:\n\n@Given(\"set the base path of the service now incident table\")\npublic void set_the_base_path_of_the_service_now_incident_table() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"send the post request for the incident service to create one record with RESTAPISEP2024 short description\")\npublic void send_the_post_request_for_the_incident_service_to_create_one_record_with_restapisep2024_short_description() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"send the post request for the incident service to create one record with Rest API Post call description\")\npublic void send_the_post_request_for_the_incident_service_to_create_one_record_with_rest_api_post_call_description() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@Then(\"ensure the record successfully create\")\npublic void ensure_the_record_successfully_create(io.cucumber.datatable.DataTable dataTable) {\n    // Write code here that turns the phrase above into concrete actions\n    // For automatic transformation, change DataTable to one of\n    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or\n    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,\n    // Double, Byte, Short, Long, BigInteger or BigDecimal.\n    //\n    // For other transformations you can register a DataTableType.\n    throw new io.cucumber.java.PendingException();\n}\n","trace":"io.cucumber.testng.UndefinedStepException: The step 'set the base path of the service now incident table' and 3 other step(s) are undefined.\nYou can implement these steps using the snippet(s) below:\n\n@Given(\"set the base path of the service now incident table\")\npublic void set_the_base_path_of_the_service_now_incident_table() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"send the post request for the incident service to create one record with RESTAPISEP2024 short description\")\npublic void send_the_post_request_for_the_incident_service_to_create_one_record_with_restapisep2024_short_description() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"send the post request for the incident service to create one record with Rest API Post call description\")\npublic void send_the_post_request_for_the_incident_service_to_create_one_record_with_rest_api_post_call_description() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@Then(\"ensure the record successfully create\")\npublic void ensure_the_record_successfully_create(io.cucumber.datatable.DataTable dataTable) {\n    // Write code here that turns the phrase above into concrete actions\n    // For automatic transformation, change DataTable to one of\n    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or\n    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,\n    // Double, Byte, Short, Long, BigInteger or BigDecimal.\n    //\n    // For other transformations you can register a DataTableType.\n    throw new io.cucumber.java.PendingException();\n}\n\r\n\tat io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)\r\n\tat io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg1","value":"\"Create new incident record feature\""},{"name":"arg0","value":"\"Validate the incident record creation with request body as class object\""}],"start":1728814490501,"stop":1728814490670}